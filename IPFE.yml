heat_template_version: 2015-04-30

description: Template to deploy IPFE

parameters:

  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    constraints:
      - custom_constraint: glance.image
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    constraints:
      - custom_constraint: nova.flavor    
  availability_zone:
    type: string
    description: Name of AZ.   
  networks:
    type: json
    default: []
      
resources:


  port_control:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      security_group_refs: [{ get_param: [ networks, network_control, security_group] }]
      virtual_network_refs: [{ get_param: [ networks, network_control, network] }]

  port_control_IP:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ port_control ]
    properties:
      instance_ip_address: { get_param: [ networks, network_control, fixed_ip] }
      virtual_machine_interface_refs: [{ get_resource: port_control }]
      virtual_network_refs: [{ get_param: [ networks, network_control, network] }]    

  port_control_floating_IP:
    type: OS::Neutron::FloatingIP
    depends_on: [ port_control_IP ]
    properties:
      floating_network: { get_param: [ networks, network_control, floating_network] }
      fixed_ip_address: { get_param: [ networks, network_control, fixed_ip] } 
      port_id: { get_resource: port_control }    

  port_data:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      security_group_refs: [{ get_param: [ networks, network_data, security_group] }]
      virtual_network_refs: [{ get_param: [ networks, network_data, network] }]

  port_data_IP:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ port_data ]
    properties:
      instance_ip_address: { get_param: [ networks, network_data, fixed_ip] }
      virtual_machine_interface_refs: [{ get_resource: port_data }]
      virtual_network_refs: [{ get_param: [ networks, network_data, network] }]

  port_lac:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      security_group_refs: [{ get_param: [ networks, network_lac, security_group] }]
      virtual_network_refs: [{ get_param: [ networks, network_lac, network] }]

  port_lac_IP:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ port_lac ]
    properties:
      instance_ip_address: { get_param: [ networks, network_lac, fixed_ip] }
      virtual_machine_interface_refs: [{ get_resource: port_lac }]
      virtual_network_refs: [{ get_param: [ networks, network_lac, network] }]      

  port_lac_floating_IP:
    type: OS::Neutron::FloatingIP
    depends_on: [ port_lac_IP ]
    properties:
      floating_network: { get_param: [ networks, network_lac, floating_network] }
      fixed_ip_address: { get_param: [ networks, network_lac, fixed_ip] } 
      port_id: { get_resource: port_lac }      
      
  server:
    type: OS::Nova::Server
    depends_on: [ port_control_IP, port_data_IP, port_lac_IP ]
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      flavor_update_policy: RESIZE
      availability_zone: { get_param: availability_zone }
      networks:
        - port: { get_resource: port_control }
        - port: { get_resource: port_data } 
        - port: { get_resource: port_lac }         
        
outputs:
  server:
    value: {get_attr: [server, show]}
  addresses:
    value: {get_attr: [server, addresses]}