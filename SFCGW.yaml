heat_template_version: 2015-04-30

description: Template to deploy IPFE

parameters:

  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    constraints:
      - custom_constraint: glance.image
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    constraints:
      - custom_constraint: nova.flavor    
  availability_zone:
    type: string
    description: Name of AZ.   
  network_control:
    type: json
  network_data:
    type: json
  network_left:
    type: json
  network_right:
    type: json
      
resources:


  port_control:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      security_group_refs: [{ get_param: [ network_control, security_group] }]
      virtual_network_refs: [{ get_param: [ network_control, network] }]

  port_control_IP:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ port_control ]
    properties:
      instance_ip_address: { get_param: [ network_control, fixed_ip] }
      virtual_machine_interface_refs: [{ get_resource: port_control }]
      virtual_network_refs: [{ get_param: [ network_control, network] }]    
        
  port_data:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_network_refs: [{ get_param: [ network_data, network] }]

  port_data_IP:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ port_data ]
    properties:
      instance_ip_address: { get_param: [ network_data, fixed_ip] }
      virtual_machine_interface_refs: [{ get_resource: port_data }]
      virtual_network_refs: [{ get_param: [ network_data, network] }]

  port_left:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      security_group_refs: [{ get_param: [ network_left, security_group] }]
      virtual_network_refs: [{ get_param: [ network_left, network] }]

  port_left_IP:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ port_left ]
    properties:
      instance_ip_address: { get_param: [ network_left, fixed_ip] }
      virtual_machine_interface_refs: [{ get_resource: port_left }]
      virtual_network_refs: [{ get_param: [ network_left, network] }]  
        
  port_right:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      security_group_refs: [{ get_param: [ network_right, security_group] }]
      virtual_network_refs: [{ get_param: [ network_right, network] }]  

  port_right_IP:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ port_right ]
    properties:
      instance_ip_address: { get_param: [ network_right, fixed_ip] }
      virtual_machine_interface_refs: [{ get_resource: port_right }]
      virtual_network_refs: [{ get_param: [ network_right, network] }]  
      
  server:
    type: OS::Nova::Server
    depends_on: [ port_control_IP, port_data_IP, port_left_IP, port_right_IP ]
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      flavor_update_policy: RESIZE
      availability_zone: { get_param: availability_zone }
      networks:
        - port: { get_resource: port_control }        
        - port: { get_resource: port_data }
        - port: { get_resource: port_left }
        - port: { get_resource: port_right } 
 
outputs:
  server:
    value: {get_attr: [server, show]}
  addresses:
    value: {get_attr: [server, addresses]}